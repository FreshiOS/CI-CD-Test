name: Deploy
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+/[0-9a-z]+'

jobs:
  resolve_environment:
    runs-on: self-hosted
    outputs:
      deploy_env: ${{ steps.envs.outputs.deploy_env }}
      check_all:  ${{ steps.envs.outputs.check_all }}
      scheme_list: ${{ steps.matrix.outputs.matrix }}
      build_number: ${{ vars.BUILD_NUMBER }}
    steps:
    - uses: actions/checkout@v3
    - name: fetch actions repo
      uses: actions/checkout@v3
      with:
        repository: "FreshiOS/StepCount"
        path: ./actions
        token: ${{ secrets.GIT_TOKEN }}
        ref: "cicd-test"
    - name: set envs
      id: envs
      uses: ./actions/common
      with:
        current_branch: ${{ github.ref_name }}
        type: ${{ github.ref_type }}
    - uses: actions/checkout@v3
    - name: set matrix
      id: matrix
      uses: ./actions/matrix
      with:
        tag: ${{ steps.envs.outputs.deploy_env }}

  consecutiveness:
    runs-on: self-hosted
    steps:
    - uses: mktcode/consecutive-workflow-action@e2e008186aa210faacd68ec30f6ac236f7e2f435
      with:
        token: ${{ secrets.GIT_TOKEN }}

  deploy:
    needs: [resolve_environment, consecutiveness]
    if: needs.resolve_environment.outputs.check_all == 'false'
    strategy:
      matrix:
        environment: [ "${{ needs.resolve_environment.outputs.deploy_env }}" ]
    environment:
      name: ${{ matrix.environment }}
    runs-on: self-hosted
    outputs:
      build_number: ${{ steps.get_number.outputs.build_number }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: fetch actions repo
        uses: actions/checkout@v3
        with:
          repository: "FreshiOS/StepCount"
         path: ./actions
          token: ${{ secrets.GIT_TOKEN }}
          ref: "cicd-test"
      - name: configure
        uses: ./actions/configure
        with:
          xcode-version: 14.3.1
          CERT_ENCRYPTION_KEY: ${{ secrets.CERTS_ENCRYPTO_PWD }}
          ENCRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/CI_CD_Test.mobileprovision.gpg' }}
          DECRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/CI_CD_Test.mobileprovision' }}
          PROVISIONING_ENCRYPTION_KEY: ${{ secrets.PROFILES_ENCRYPTO_PWD }}
          CERT_EXPORT_KEY: ${{ secrets.CERTS_EXPORT_PWD }}
          KEYCHAIN: "${{ secrets.XC_SCHEME }}.keychain"
      - name: fastlane-action
        id: get_number
        uses: ./actions/fastlane
        with:
          DEVELOPER_APP_IDENTIFIER: ${{ secrets.DEVELOPER_APP_IDENTIFIER }}
          API_KEY: ${{ secrets.API_KEY }}
          API_ISSUER : ${{ secrets.API_ISSUER }}
          PRIVATE_API_KEY: ${{ secrets.PRIVATE_API_KEY }}
          XC_SCHEME: ${{ secrets.XC_SCHEME }}
          TAG: ${{ github.ref_name }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          BUILD_NUMBER: ${{ needs.resolve_environment.outputs.build_number }}

  deploy-all:
    needs: [resolve_environment, consecutiveness]
    if: needs.resolve_environment.outputs.check_all == 'true'
    strategy:
      matrix:
        environment: ${{ fromJson(needs.resolve_environment.outputs.scheme_list) }}
      fail-fast: false
      max-parallel: 7
    environment:
      name: ${{ matrix.environment }}
    runs-on: self-hosted
    outputs:
      build_number: ${{ steps.get_number.outputs.build_number }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: fetch actions repo
        uses: actions/checkout@v3
        with:
          repository: "FreshiOS/StepCount"
          path: ./actions
          token: ${{ secrets.GIT_TOKEN }}
          ref: "cicd-test"
      - name: configure
        uses: ./actions/configure
        with:
          xcode-version: 14.3.1
          CERT_ENCRYPTION_KEY: ${{ secrets.CERTS_ENCRYPTO_PWD }}
          ENCRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/CI_CD_Test.mobileprovision.gpg' }}
          DECRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/CI_CD_Test.mobileprovision' }}
          PROVISIONING_ENCRYPTION_KEY: ${{ secrets.PROFILES_ENCRYPTO_PWD }}
          CERT_EXPORT_KEY: ${{ secrets.CERTS_EXPORT_PWD }}
          KEYCHAIN: "${{ secrets.XC_SCHEME }}.keychain"
      - name: fastlane-action
        id: get_number
        uses: ./actions/fastlane
        with:
          DEVELOPER_APP_IDENTIFIER: ${{ secrets.DEVELOPER_APP_IDENTIFIER }}
          API_KEY: ${{ secrets.API_KEY }}
          API_ISSUER : ${{ secrets.API_ISSUER }}
          PRIVATE_API_KEY: ${{ secrets.PRIVATE_API_KEY }}
          XC_SCHEME: ${{ secrets.XC_SCHEME }}
          TAG: ${{ github.ref_name }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          SCHEME_LIST: ${{ needs.resolve_environment.outputs.scheme_list }}
          BUILD_NUMBER: ${{ needs.resolve_environment.outputs.build_number }}
          ALL: "true"
