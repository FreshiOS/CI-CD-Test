name: Deploy
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+/[0-9a-z]+'

jobs:
  resolve_environment:
    runs-on: self-hosted
    outputs:
      deploy_env: ${{ steps.envs.outputs.deploy_env }}
      check_all:  ${{ steps.envs.outputs.check_all }}
    steps:
    - uses: actions/checkout@v3
    - name: set envs
      id: envs
      uses: ./actions/common
      with:
        current_branch: ${{ github.ref_name }}
        type: ${{ github.ref_type }}

  consecutiveness:
    runs-on: self-hosted
    steps:
    - uses: mktcode/consecutive-workflow-action@e2e008186aa210faacd68ec30f6ac236f7e2f435
      with:
        token: ${{ secrets.GIT_TOKEN }}

  deploy:
    needs: [resolve_environment, consecutiveness]
    if: needs.resolve_environment.outputs.check_all == 'false'
    strategy:
      matrix:
        environment: ["${{ needs.resolve_environment.outputs.deploy_env }}"]
    env:
      name: ${{ matrix.environment }}
    runs-on: self-hosted
    outputs:
      build_number: ${{ steps.get_number.outputs.build_number }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: configure
        uses: ./actions/configure
        with:
          xcode-version: 14.3.1
          CERT_ENCRYPTION_KEY: ${{ secrets.CERTS_ENCRYPTO_PWD }}
          ENCRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/CI_CD_Test.mobileprovision.gpg' }}
          DECRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/CI_CD_Test.mobileprovision' }}
          PROVISIONING_ENCRYPTION_KEY: ${{ secrets.PROFILES_ENCRYPTO_PWD }}
          CERT_EXPORT_KEY: ${{ secrets.CERTS_EXPORT_PWD }}
          KEYCHAIN: "${{ env.name }}.keychain"
          KEYCHAIN_PWD: ${{ secrets.KEYCHAIN_PWD }}
      - name: fastlane-action
        id: get_number
        uses: ./actions/fastlane
        with:
          DEVELOPER_APP_IDENTIFIER: ${{ secrets.DEVELOPER_APP_IDENTIFIER }}
          API_KEY: ${{ secrets.API_KEY }}
          API_ISSUER : ${{ secrets.API_ISSUER }}
          PRIVATE_API_KEY: ${{ secrets.PRIVATE_API_KEY }}
          XC_SCHEME: ${{ secrets.XC_SCHEME }}
          TAG: ${{ github.ref_name }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          BUILD_NUMBER: ${{ vars.BUILD_NUMBER }}
          ALL: "false"

  deploy-all:
    needs: [resolve_environment,consecutiveness]
    if: needs.resolve_environment.outputs.check_all == 'true'
    strategy:
      matrix:
        environment: ["qa","stage"]
      fail-fast: false
      max-parallel: 7
    env:
      name: ${{ matrix.environment }}
    runs-on: self-hosted
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: configure
        uses: ./actions/configure
        with:
          xcode-version: 14.3.1
          CERT_ENCRYPTION_KEY: ${{ secrets.CERTS_ENCRYPTO_PWD }}
          ENCRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/CI_CD_Test.mobileprovision.gpg' }}
          DECRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/CI_CD_Test.mobileprovision' }}
          PROVISIONING_ENCRYPTION_KEY: ${{ secrets.PROFILES_ENCRYPTO_PWD }}
          CERT_EXPORT_KEY: ${{ secrets.CERTS_EXPORT_PWD }}
          KEYCHAIN: "${{ env.name }}.keychain"
          KEYCHAIN_PWD: ${{ secrets.KEYCHAIN_PWD }}
      - name: fastlane-action
        id: get_number
        uses: ./actions/fastlane
        with:
          DEVELOPER_APP_IDENTIFIER: ${{ secrets.DEVELOPER_APP_IDENTIFIER }}
          API_KEY: ${{ secrets.API_KEY }}
          API_ISSUER : ${{ secrets.API_ISSUER }}
          PRIVATE_API_KEY: ${{ secrets.PRIVATE_API_KEY }}
          XC_SCHEME: ${{ secrets.XC_SCHEME }}
          TAG: ${{ github.ref_name }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          SCHEME_ALL_LIST: ${{ strategy.matrix.environment }}
          BUILD_NUMBER: ${{ vars.BUILD_NUMBER }}
          ALL: "true"

  delete-keychain:
    runs-on: self-hosted
    needs: [deploy, deploy-all]
    if: always()
    steps:
      - if: needs.deploy.configure.result == 'success'
        shell: bash
        run: |
          security delete-keychain "${{ needs.deploy.strategy.matrix.environment }}.keychain"
          security list-keychains -d user -s login.keychain
      - if: needs.deploy-all.configure.result == 'success'
        shell: bash
        run: |
          for name in ${{ needs.deploy-all.strategy.matrix.environment }}
          do
            security delete-keychain "$name.keychain"
          done
          security list-keychains -d user -s login.keychain
