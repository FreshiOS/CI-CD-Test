default_platform(:ios)

lane :printTest do
  scheme_list = ENV["SCHEME_LIST"]
  scheme = ENV["SCHEME"]

  splitted_scheme = ENV["SCHEME"]&.split("-") || []
  # first_scheme = splitted_scheme&[1] || ""
  # scheme = first_scheme&.downcase || ""

  splitted_list = ENV["SCHEME_LIST"]&.split(/[^a-z]+/) || []
  splitted_list.shift
  idx = splitted_list&.index("stage") || 0

  puts "Splitted_List: #{splitted_list}"
  puts "Splitted_Scheme: #{splitted_scheme}"
  puts "Index: #{idx}"
  puts "Scheme_List: #{scheme_list}"
  puts "Scheme: #{scheme}"
end

lane :flight do

  ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "60"
  ENV["FASTLANE_XCODEBUILD_SETTINGS_RETRIES"] = "6"

  clear_derived_data

  api_key = app_store_connect_api_key(
    key_id: ENV["API_KEY"],
    issuer_id: ENV["API_ISSUER"],
    key_content: ENV["PRIVATE_API_KEY"],
    duration: 1200,
    in_house: false
  )

  app_store_connect_build_number = latest_testflight_build_number()
  git_hub_stored_build_number = ENV["BUILD_NUMBER"].to_i

  current_build_number = app_store_connect_build_number > git_hub_stored_build_number ? app_store_connect_build_number + 1 : git_hub_stored_build_number + 1
 version = get_version_number(
    xcodeproj: "CI-CD-Test.xcodeproj",
    target: "CI-CD-Test"
  )

  newVersion = ENV["TAG"].split('v')[1].split('-')[0].strip

  if version != newVersion
    increment_version_number_in_plist(
      version_number: newVersion,
      xcodeproj: "CI-CD-Test.xcodeproj",
      target: "CI-CD-Test",
      plist_build_setting_support: true
    )

    increment_version_number_in_plist(
      version_number: newVersion,
      xcodeproj: "CI-CD-Test.xcodeproj",
      target: "TestWidgetExtension",
      plist_build_setting_support: true
    )

  end

  release_tag_name = "#{ENV["TAG"]}"
  changelog = "[#{ENV["SCHEME"]}] #{ENV["TAG"]} "

  isLastBuildNumber = true
  if ENV["ALL"] == "true"
    scheme_list = ENV["SCHEME_LIST"]&.split(/[^a-z]+/) || []
    scheme_list.shift
    scheme = ENV["SCHEME"].split("-")[1]&.downcase || ""
    idx = scheme_list&.index(scheme) || 0
    current_build_number += idx

    if idx + 1 < scheme_list.size
      isLastBuildNumber = false
    end

    changelog += "\nScheme_List: #{scheme_list}\nIndex: #{idx}\nisLastBuildNumber: #{isLastBuildNumber}"

    release_tag_name[/all[\d]?/] = scheme&.upcase || "#{idx}"
  end

  increment_build_number(
    build_number: current_build_number
  )

  update_project_team(
    path: "CI-CD-Test.xcodeproj",
    teamid: "JT5962HWNA"
  )

  update_code_signing_settings(
    use_automatic_signing: false,
    team_id: "JT5962HWNA",
    targets: "CI-CD-Test",
    code_sign_identity: "Apple Distribution",
    profile_name: "CI-CD-Test-Profile"
  )

  update_code_signing_settings(
    use_automatic_signing: false,
    team_id: "JT5962HWNA",
    targets: "TestWidgetExtension",
    code_sign_identity: "Apple Distribution",
    profile_name: "CI-CD-Test-Widget-Profile",
   )

   gym(
     scheme: ENV["SCHEME"],
     export_method: "app-store",
     skip_profile_detection: true,
     export_team_id: "JT5962HWNA",
     export_xcargs: "-allowProvisioningUpdates",
     export_options: {
      provisioningProfiles: { "com.test.CI-CD-Test": "CI-CD-Test-Profile" },                                                   
                            { "com.test.CI-CD-Test.TestWidget": "CI-CD-Test-Widget-Profile" }
    },
     archive_path: "../Archives/",
     derived_data_path: "../Library/Developer/Xcode/DerivedData/Temp",
     clean: true
    )

  scheme = ENV["SCHEME"].split("-")[1] || "dev"
  value = sh("cd ../CI-CD-Test/App/Config && grep 'NOTE = ' #{scheme}.xcconfig")
  note = value.split('=')[1]&.strip || ""
  changelog = "[#{ENV["SCHEME"]}] #{ENV["TAG"]} \n#{note}"

   pilot(
     api_key: api_key,
     changelog: changelog,
     wait_processing_timeout_duration: 3000
   )

  if isLastBuildNumber == true
    github_api(
      server_url: "https://api.github.com",
      path: "/repos/FreshiOS/CI-CD-Test/actions/variables/BUILD_NUMBER",
      http_method: "PATCH",
      api_token: ENV["GIT_TOKEN"],
      body: {"name":"BUILD_NUMBER","value":"#{current_build_number}"}
    )
  end

  github_release = set_github_release(
    repository_name: "FreshiOS/CI-CD-Test",
    name: "#{release_tag_name} (#{current_build_number})",
    api_token: ENV["GIT_TOKEN"],
    tag_name: release_tag_name,
    description: changelog,
   )
end
